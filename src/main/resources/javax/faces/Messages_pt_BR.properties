#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright (c) 2010 Oracle and/or its affiliates. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common Development
# and Distribution License("CDDL") (collectively, the "License").  You
# may not use this file except in compliance with the License.  You can
# obtain a copy of the License at
# https://glassfish.dev.java.net/public/CDDL+GPL_1_1.html
# or packager/legal/LICENSE.txt.  See the License for the specific
# language governing permissions and limitations under the License.
#
# When distributing the software, include this License Header Notice in each
# file and include the License file at packager/legal/LICENSE.txt.
#
# GPL Classpath Exception:
# Oracle designates this particular file as subject to the "Classpath"
# exception as provided by Oracle in the GPL Version 2 section of the License
# file that accompanied this code.
#
# Modifications:
# If applicable, add the following below the License Header, with the fields
# enclosed by brackets [] replaced by your own identifying information:
# "Portions Copyright [year] [name of copyright owner]"
#
# Contributor(s):
# If you wish your version of this file to be governed by only the CDDL or
# only the GPL Version 2, indicate your decision by adding "[Contributor]
# elects to include this software in this distribution under the [CDDL or GPL
# Version 2] license."  If you don't indicate a single choice of license, a
# recipient has the option to distribute your version of this file under
# either the CDDL, the GPL Version 2 or to extend the choice of license to
# its licensees as provided above.  However, if you add GPL Version 2 code
# and therefore, elected the GPL Version 2 license, then the option applies
# only if the new code is made subject to such option by the copyright
# holder.
#

 # DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 #
 # Copyright 1997-2007 Sun Microsystems, Inc. All rights reserved.
 #
 # The contents of this file are subject to the terms of either the GNU
 # General Public License Version 2 only ("GPL") or the Common Development
 # and Distribution License("CDDL") (collectively, the "License").  You
 # may not use this file except in compliance with the License. You can obtain
 # a copy of the License at https://glassfish.dev.java.net/public/CDDL+GPL.html
 # or glassfish/bootstrap/legal/LICENSE.txt.  See the License for the specific
 # language governing permissions and limitations under the License.
 #
 # When distributing the software, include this License Header Notice in each
 # file and include the License file at glassfish/bootstrap/legal/LICENSE.txt.
 # Sun designates this particular file as subject to the "Classpath" exception
 # as provided by Sun in the GPL Version 2 section of the License file that
 # accompanied this code.  If applicable, add the following below the License
 # Header, with the fields enclosed by brackets [] replaced by your own
 # identifying information: "Portions Copyrighted [year]
 # [name of copyright owner]"
 #
 # Contributor(s):
 #
 # If you wish your version of this file to be governed by only the CDDL or
 # only the GPL Version 2, indicate your decision by adding "[Contributor]
 # elects to include this software in this distribution under the [CDDL or GPL
 # Version 2] license."  If you don't indicate a single choice of license, a
 # recipient has the option to distribute your version of this file under
 # either the CDDL, the GPL Version 2 or to extend the choice of license to
 # its licensees as provided above.  However, if you add GPL Version 2 code
 # and therefore, elected the GPL Version 2 license, then the option applies
 # only if the new code is made subject to such option by the copyright
 # holder.
 #

# ==============================================================================
# Component Errors
# ==============================================================================
javax.faces.component.UIInput.CONVERSION={0}: Ocorreu um erro de convers\u00e3o.
javax.faces.component.UIInput.REQUIRED={0}: Erro de valida\u00e7\u00e3o: o valor \u00e9 necess\u00e1rio.
javax.faces.component.UIInput.UPDATE={0}: Ocorreu um erro ao processar as informa\u00e7\u00f5es enviadas. 
javax.faces.component.UISelectOne.INVALID={0}: Erro de valida\u00e7\u00e3o: o valor n\u00e3o \u00e9 v\u00e1lido
javax.faces.component.UISelectMany.INVALID={0}: Erro de valida\u00e7\u00e3o: o valor n\u00e3o \u00e9 v\u00e1lido

# ==============================================================================
# Converter Errors
# ==============================================================================
javax.faces.converter.BigDecimalConverter.DECIMAL={2}: ''{0}'' deve ser um n\u00famero decimal com sinal.
javax.faces.converter.BigDecimalConverter.DECIMAL_detail={2}: ''{0}'' deve ser um n\u00famero decimal com sinal formado por zero ou mais d\u00edgitos, que pode ser seguido de um ponto ou fra\u00e7\u00e3o decimal.  Exemplo: {1} 
javax.faces.converter.BigIntegerConverter.BIGINTEGER={2}: ''{0}'' deve ser um n\u00famero formado por um ou mais d\u00edgitos.
javax.faces.converter.BigIntegerConverter.BIGINTEGER_detail={2}: ''{0}'' deve ser um n\u00famero formado por um ou mais d\u00edgitos. Exemplo: {1} 
javax.faces.converter.BooleanConverter.BOOLEAN={1}: ''{0}'' deve ser 'verdadeiro' ou 'falso'.
javax.faces.converter.BooleanConverter.BOOLEAN_detail={1}: ''{0}'' deve ser 'verdadeiro' ou 'falso'.  Qualquer valor diferente de 'verdadeiro' se avaliar\u00e1 como 'falso'.
javax.faces.converter.ByteConverter.BYTE={2}: ''{0}'' deve ser um n\u00famero entre 0 e 255.
javax.faces.converter.ByteConverter.BYTE_detail={2}: ''{0}'' deve ser um n\u00famero entre 0 e 255.  Exemplo: {1} 
javax.faces.converter.CharacterConverter.CHARACTER={1}: ''{0}'' deve ser um caractere v\u00e1lido.
javax.faces.converter.CharacterConverter.CHARACTER_detail={1}: ''{0}'' deve ser um caractere v\u00e1lido ASCII.
javax.faces.converter.DateTimeConverter.DATE={2}: n\u00e3o foi poss\u00edvel reconhecer ''{0}'' como uma data.
javax.faces.converter.DateTimeConverter.DATE_detail={2}: n\u00e3o foi poss\u00edvel reconhecer ''{0}'' como uma data. Exemplo: {1} 
javax.faces.converter.DateTimeConverter.TIME={2}: n\u00e3o foi poss\u00edvel reconhecer ''{0}'' como uma hora.
javax.faces.converter.DateTimeConverter.TIME_detail={2}: n\u00e3o foi poss\u00edvel reconhecer ''{0}'' como uma hora. Exemplo: {1} 
javax.faces.converter.DateTimeConverter.DATETIME={2}: n\u00e3o foi poss\u00edvel reconhecer ''{0}'' como uma data e hora.
javax.faces.converter.DateTimeConverter.DATETIME_detail={2}: n\u00e3o foi poss\u00edvel reconhecer ''{0}'' como uma data e hora. Exemplo: {1} 
javax.faces.converter.DateTimeConverter.PATTERN_TYPE={1}: Um atributo 'pattern' ou 'type' deve ser especificado para converter o valor ''{0}''.
javax.faces.converter.DoubleConverter.DOUBLE={2}: ''{0}'' deve ser um n\u00famero formado por um ou mais d\u00edgitos.
javax.faces.converter.DoubleConverter.DOUBLE_detail={2}: ''{0}'' deve ser um n\u00famero entre 4.9E-324 e 1.7976931348623157E308  Exemplo: {1} 
javax.faces.converter.EnumConverter.ENUM={2}: ''{0}'' deve ser convert\u00edvel em um enum.
javax.faces.converter.EnumConverter.ENUM_detail={2}: ''{0}'' deve ser convert\u00edvel em um enum de um enum que contenha a constante ''{1}''.
javax.faces.converter.EnumConverter.ENUM_NO_CLASS={1}: ''{0}'' deve ser convert\u00edvel em um enum do enum, mas sem nenhuma classe enum fornecida.
javax.faces.converter.EnumConverter.ENUM_NO_CLASS_detail={1}: ''{0}'' deve ser convert\u00edvel em um enum do enum, mas sem nenhuma classe enum fornecida.
javax.faces.converter.FloatConverter.FLOAT={2}: ''{0}'' deve ser um n\u00famero formado por um ou mais d\u00edgitos.
javax.faces.converter.FloatConverter.FLOAT_detail={2}: ''{0}'' deve ser um n\u00famero entre 1.4E-45 e 3.4028235E38  Exemplo: {1}
javax.faces.converter.IntegerConverter.INTEGER={2}: ''{0}'' deve ser um n\u00famero formado por um ou mais d\u00edgitos.
javax.faces.converter.IntegerConverter.INTEGER_detail={2}: ''{0}'' deve ser um n\u00famero entre -2147483648 e 2147483647 Exemplo: {1}
javax.faces.converter.LongConverter.LONG={2}: ''{0}'' deve ser um n\u00famero formado por um ou mais d\u00edgitos.
javax.faces.converter.LongConverter.LONG_detail={2}: ''{0}'' deve ser um n\u00famero entre -9223372036854775808 a 9223372036854775807 Exemplo: {1}
javax.faces.converter.NumberConverter.CURRENCY={2}: n\u00e3o foi poss\u00edvel reconhecer ''{0}'' como um valor monet\u00e1rio.
javax.faces.converter.NumberConverter.CURRENCY_detail={2}: n\u00e3o foi poss\u00edvel reconhecer ''{0}'' como um valor monet\u00e1rio. Exemplo: {1}
javax.faces.converter.NumberConverter.PERCENT={2}: n\u00e3o foi poss\u00edvel reconhecer ''{0}'' como uma porcentagem.
javax.faces.converter.NumberConverter.PERCENT_detail={2}: n\u00e3o foi poss\u00edvel reconhecer ''{0}'' como uma porcentagem. Exemplo: {1}
javax.faces.converter.NumberConverter.NUMBER={2}: ''{0}'' n\u00e3o \u00e9 um n\u00famero.
javax.faces.converter.NumberConverter.NUMBER_detail={2}: ''{0}'' n\u00e3o \u00e9 um n\u00famero. Exemplo: {1}
javax.faces.converter.NumberConverter.PATTERN={2}: ''{0}'' n\u00e3o \u00e9 um padr\u00e3o de n\u00famero.
javax.faces.converter.NumberConverter.PATTERN_detail={2}: ''{0}'' n\u00e3o \u00e9 um padr\u00e3o de n\u00famero. Exemplo: {1}
javax.faces.converter.ShortConverter.SHORT={2}: ''{0}'' deve ser um n\u00famero formado por um ou mais d\u00edgitos.
javax.faces.converter.ShortConverter.SHORT_detail={2}: ''{0}'' deve ser um n\u00famero entre -32768 e 32767 Exemplo: {1}
javax.faces.converter.STRING={1}: n\u00e3o foi poss\u00edvel converter ''{0}'' em uma sequ\u00eancia.


# ==============================================================================
# Validator Errors
# ==============================================================================
javax.faces.validator.DoubleRangeValidator.MAXIMUM={1}: Erro de valida\u00e7\u00e3o: o valor \u00e9 maior do que o m\u00e1ximo permitido de "{0}"
javax.faces.validator.DoubleRangeValidator.MINIMUM={1}: Erro de valida\u00e7\u00e3o: o valor \u00e9 menor do que o m\u00ednimo permitido de "{0}"
javax.faces.validator.DoubleRangeValidator.NOT_IN_RANGE={2}: Erro de valida\u00e7\u00e3o: o atributo especificado n\u00e3o est\u00e1 entre os valores esperados de {0} e {1}.
javax.faces.validator.DoubleRangeValidator.TYPE={0}: Erro de valida\u00e7\u00e3o: o valor n\u00e3o \u00e9 do tipo correto
javax.faces.validator.LengthValidator.MAXIMUM={1}: Erro de valida\u00e7\u00e3o: o comprimento \u00e9 maior do que o m\u00e1ximo permitido de "{0}"
javax.faces.validator.LengthValidator.MINIMUM={1}: Erro de valida\u00e7\u00e3o: o comprimento \u00e9 menor do que o m\u00ednimo permitido de "{0}"
javax.faces.validator.LongRangeValidator.MAXIMUM={1}: Erro de valida\u00e7\u00e3o: o valor \u00e9 maior do que o m\u00e1ximo permitido de "{0}"
javax.faces.validator.LongRangeValidator.MINIMUM={1}: Erro de valida\u00e7\u00e3o: o valor \u00e9 menor do que o m\u00ednimo permitido de "{0}"
javax.faces.validator.LongRangeValidator.NOT_IN_RANGE={2}: Erro de valida\u00e7\u00e3o: o atributo especificado n\u00e3o est\u00e1 entre os valores esperados de {0} e {1}.
javax.faces.validator.LongRangeValidator.TYPE={0}: Erro de valida\u00e7\u00e3o: o valor n\u00e3o \u00e9 do tipo correto.
javax.faces.validator.NOT_IN_RANGE=Erro de valida\u00e7\u00e3o: o atributo especificado n\u00e3o est\u00e1 entre os valores esperados de {0} e {1}.
javax.faces.validator.RegexValidator.PATTERN_NOT_SET=O padr\u00e3o Regex deve ser definido.
javax.faces.validator.RegexValidator.PATTERN_NOT_SET_detail=O padr\u00e3o Regex deve ser definido como um valor n\u00e3o vazio.
javax.faces.validator.RegexValidator.NOT_MATCHED=Padr\u00e3o Regex n\u00e3o corresponde
javax.faces.validator.RegexValidator.NOT_MATCHED_detail=O padr\u00e3o Regex de ''{0}'' n\u00e3o corresponde
javax.faces.validator.RegexValidator.MATCH_EXCEPTION=Erro na express\u00e3o regular.
javax.faces.validator.RegexValidator.MATCH_EXCEPTION_detail=Erro na express\u00e3o regular, ''{0}''
javax.faces.validator.BeanValidator.MESSAGE={0}


